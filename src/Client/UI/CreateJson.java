/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client.UI;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import Client.DAO.*;
import Client.DAO.Process;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

/**
 *
 * @author THANH
 */
public class CreateJson extends javax.swing.JFrame {

    private String pattern_number = "^[0-9]+$";
    private String patternStruct = "^[0-9]+ [0-9]+ [0-9]+$";
        
    private ArrayList<Process> list = new ArrayList<>();
    DefaultTableModel model;
    public void loadOptionTypeP() {
        cbTypeP.addItem("FCFS");
        cbTypeP.addItem("SJF");
        cbTypeP.addItem("Priority");
        cbTypeP.addItem("RR");      
    }
    public CreateJson() {
        initComponents();
        loadOptionTypeP();
        txtQtP.setEditable(false);
        cbTypeP.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    if (cbTypeP.getSelectedItem().toString().toLowerCase().equals("rr")) {
                        txtQtP.setEnabled(true);
                        txtQtP.setEditable(true);
                    }
                    else {
                        txtQtP.setEnabled(false);
                        txtQtP.setText("");
                    }
                    if (cbTypeP.getSelectedItem().toString().toLowerCase().equals("priority")) {
                        txtPriP.setEnabled(true);
                    }
                    else {
                        txtPriP.setEnabled(false);
                        txtPriP.setText("1");
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSaveP = new javax.swing.JButton();
        btnResetP = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNameP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtArP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPriP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtBrP = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnCheck = new javax.swing.JButton();
        btnDelP = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbleCreateJson = new javax.swing.JTable();
        btnCreateFileP = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbTypeP = new javax.swing.JComboBox<>();
        txtQtP = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));

        btnSaveP.setText("Lưu");
        btnSaveP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePActionPerformed(evt);
            }
        });

        btnResetP.setText("Làm mới");
        btnResetP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetPActionPerformed(evt);
            }
        });

        jLabel1.setText("Tên tiến trình (name)");

        jLabel2.setText("Thời gian xuất hiện (arrivetime)");

        jLabel3.setText("Độ ưu tiên (priority)");

        txtPriP.setText("1");
        txtPriP.setEnabled(false);

        jLabel4.setText("Thời gian thực hiện (burttime)");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Tạo file dữ liệu các tiến trình");

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));
        jPanel2.setForeground(new java.awt.Color(0, 204, 204));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        btnCheck.setText("check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        btnDelP.setText("Xoá");
        btnDelP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPriP, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtArP, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNameP, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtBrP, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(72, 72, 72))))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSaveP, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelP, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(btnResetP))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCheck)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNameP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtArP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPriP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBrP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveP)
                    .addComponent(btnResetP)
                    .addComponent(btnDelP))
                .addGap(18, 18, 18)
                .addComponent(btnCheck)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtNameP.getAccessibleContext().setAccessibleName("");

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0)));

        tbleCreateJson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên tiến trình", "Thời gian đến", "Thời gian thực hiện", "Độ ưu tiên"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbleCreateJson.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbleCreateJsonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbleCreateJson);

        btnCreateFileP.setText("Tạo file tiến trình");
        btnCreateFileP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateFilePActionPerformed(evt);
            }
        });

        jLabel6.setText("Loại thuật toán");

        cbTypeP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTypePItemStateChanged(evt);
            }
        });
        cbTypeP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbTypePMouseClicked(evt);
            }
        });
        cbTypeP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTypePActionPerformed(evt);
            }
        });

        txtQtP.setEnabled(false);

        jLabel5.setText("Quantime (RR)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtQtP, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbTypeP, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreateFileP)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreateFileP)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtQtP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cbTypeP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetPActionPerformed
         reset();
         txtPriP.setText("1");
    }//GEN-LAST:event_btnResetPActionPerformed

    private void btnSavePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePActionPerformed
        int name = 0;
        int arrTime = 0;
        int burtTime = 0;
        int priority = 0;
        try {
            if (!String.valueOf(txtNameP.getText()).matches(pattern_number) || !String.valueOf(txtArP.getText()).matches(pattern_number) || !String.valueOf(txtBrP.getText()).matches(pattern_number) || !String.valueOf(txtPriP.getText()).matches(pattern_number)) {
                JOptionPane.showMessageDialog(null, "Dữ liệu phải là số, không âm");
            }
            else {
                name = Integer.parseInt(txtNameP.getText());
                arrTime = Integer.parseInt(txtArP.getText());
                burtTime = Integer.parseInt(txtBrP.getText());
                priority = Integer.parseInt(txtPriP.getText());

                Process process = new Process(name, arrTime, burtTime, priority) {};

                //Nếu không có dòng nào được chọn thì thêm dữ liệu bình thường
                if (tbleCreateJson.getSelectedRow() == -1 ) {
                    if (!checkUniqeName(process)) {
                        model = (DefaultTableModel) tbleCreateJson.getModel();

                        list.add(process);

                        Process p = list.get(list.size()-1);
                        model.addRow(new Object[] {
                            p.getPid(), p.getArrTime(), p.getBurtTime(), p.getPriority()
                        });

                        tbleCreateJson.getSelectionModel().clearSelection();
                    } else {
                        JOptionPane.showMessageDialog(null, "Tên tiến trình đã tồn tại");
                    }
                } else {
                    // Nếu có dòng đang chọn thì update dòng đó và clear focus
                    if (!checkUniqeName(process)) {
                        int i = tbleCreateJson.getSelectedRow();
                        if (i >= 0) {
                            model.setValueAt(process.getPid(), i, 0);
                            model.setValueAt(process.getArrTime(), i, 1);
                            model.setValueAt(process.getBurtTime(), i, 2);
                            model.setValueAt(process.getPriority(), i, 3);
                        }
                        list.set(i, process);

                        tbleCreateJson.getSelectionModel().clearSelection();
                    } else {
                        JOptionPane.showMessageDialog(null, "Tên tiến trình đã tồn tại");
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Hãy điền đủ thông tin, các thông tin là số ");
        }
//        int quantime = Integer.parseInt(txtQtP.getText());
//        String type = cbTypeP.getSelectedItem().toString();
    }//GEN-LAST:event_btnSavePActionPerformed

    private boolean checkUniqeName (Process process) {
        for (int i=0; i<list.size();i++) {
            if (list.get(i).getPid() == process.getPid()) {
                return true;
            }
        }
        return false;
    }
    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
//        System.out.println("List size: " + list.size());
//        System.out.println("Row: " + tbleCreateJson.getSelectedRow());
        for (int i = 0; i < list.size(); i++) {
            System.out.println("List: " + list.get(i).getPid());
        }
        
//        if(tbleCreateJson.getSelectedRow() != -1) {
//               model.removeRow(tbleCreateJson.getSelectedRow());
//            }
        
    }//GEN-LAST:event_btnCheckActionPerformed

    private void tbleCreateJsonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbleCreateJsonMouseClicked
        int i = tbleCreateJson.getSelectedRow();
        TableModel model = tbleCreateJson.getModel();
        
        txtNameP.setText(model.getValueAt(i, 0).toString());
        txtArP.setText(model.getValueAt(i, 1).toString());
        txtBrP.setText(model.getValueAt(i, 2).toString());
        txtPriP.setText(model.getValueAt(i, 3).toString());
        
        
        //txtQtP.setText(model.getValueAt(i, 4).toString());
        //cbTypeP.setSelectedItem(model.getValueAt(i, 5).toString());
    }//GEN-LAST:event_tbleCreateJsonMouseClicked

    private void btnDelPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelPActionPerformed
        int index = tbleCreateJson.getSelectedRow();
        if ( index >= 0 ) {
            model.removeRow(index);
            list.remove(index);
            
           
        }
        else {
            JOptionPane.showMessageDialog(null, "Hãy chọn 1 tiến trình để xoá");
        }
    }//GEN-LAST:event_btnDelPActionPerformed

    private void btnCreateFilePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateFilePActionPerformed
        Object[] options = {"Yes, please",
                    "No!"};
        int check = JOptionPane.showOptionDialog(this,
            "Bạn có muốn tạo file với " + list.size() + " tiến trình?",
            "Tạo file dữ liệu các tiến trình",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,     //do not use a custom Icon
            options,  //the titles of buttons
            options[0]); //default button title
        //yes 0 / no 1
        if (check==0)  {
            try {
                JSONArray processList = new JSONArray();
                for (int i=0; i<list.size(); i++) {
                    JSONObject processDetail = new JSONObject();
                    processDetail.put("name", list.get(i).getPid());
                    processDetail.put("arrivetime", list.get(i).getArrTime());
                    processDetail.put("burttime", list.get(i).getBurtTime());
                    processDetail.put("priority", list.get(i).getPriority());
                    processList.add(processDetail);
                }
                JSONObject processData = new JSONObject();
                processData.put("type", (cbTypeP.getSelectedItem().toString()).toLowerCase());
                processData.put("data", processList);
                
                //Kiểm tra RR
                if (cbTypeP.getSelectedItem().toString().toLowerCase().equals("rr")) {
                    processData.put("quantime", Integer.parseInt(txtQtP.getText()));
                }

                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Chọn thư mục lưu file");   

                int userSelection = fileChooser.showSaveDialog(this);

                if (userSelection == JFileChooser.APPROVE_OPTION) {
                    File fileToSave = fileChooser.getSelectedFile();
                    System.out.println("Save as file: " + fileToSave.getAbsolutePath() + ".json");
                    //Write JSON file
                    String location = fileToSave.getAbsolutePath().toString() + ".json";
                    try (FileWriter file = new FileWriter(location)) {
                        file.write(processData.toJSONString());
                        file.flush();
                        JOptionPane.showMessageDialog(null, "Tạo file thành công: " + fileToSave.getAbsolutePath()+ ".json");
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(null, "Tạo file thất bại");
                        System.out.println("Ex: " + e);
                    }
                }
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(null, "Không có dữ liệu nào để tạo file");
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Đã huỷ");
        }
               
        
    }//GEN-LAST:event_btnCreateFilePActionPerformed

    private void cbTypePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTypePActionPerformed
//        String type = cbTypeP.getSelectedItem().toString().toLowerCase();
//        if (!type.equals("rr")) {
//            txtQtP.setEnabled(false);
//        }
//        System.out.println(type);
         //doSomething();
    }//GEN-LAST:event_cbTypePActionPerformed
    private void doSomething() {
        String type = cbTypeP.getSelectedItem().toString().toLowerCase();
        if (!type.equals("rr")) {
            txtQtP.setEnabled(false);
        }
        System.out.println(type);
    }
    

    private void cbTypePItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTypePItemStateChanged

    }//GEN-LAST:event_cbTypePItemStateChanged

    private void cbTypePMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbTypePMouseClicked
        
    }//GEN-LAST:event_cbTypePMouseClicked
    private void reset() {
        txtNameP.setText("");
        txtArP.setText("");
        txtBrP.setText("");
        txtPriP.setText("");
        txtQtP.setText("");
        cbTypeP.setSelectedIndex(0);
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateJson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateJson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateJson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateJson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateJson().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnCreateFileP;
    private javax.swing.JButton btnDelP;
    private javax.swing.JButton btnResetP;
    private javax.swing.JButton btnSaveP;
    private javax.swing.JComboBox<String> cbTypeP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbleCreateJson;
    private javax.swing.JTextField txtArP;
    private javax.swing.JTextField txtBrP;
    private javax.swing.JTextField txtNameP;
    private javax.swing.JTextField txtPriP;
    private javax.swing.JTextField txtQtP;
    // End of variables declaration//GEN-END:variables
}
